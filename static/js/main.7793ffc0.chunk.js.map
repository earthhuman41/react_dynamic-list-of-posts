{"version":3,"sources":["api/loadData.js","components/User/User.js","components/CommentItem/CommentItem.js","components/CommentsList/CommentsList.js","components/PostItem/PostItem.js","components/ListOfPosts/ListOfPosts.js","components/App/App.js","index.js"],"names":["loadData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","link","loadedData","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","User","_this$props$user","props","user","name","email","react_default","createElement","className","React","Component","CommentItem","comment","components_User_User","body","CommentsList","state","showComments","setState","prevState","_this2","comments","onClick","map","components_CommentItem_CommentItem","PostItem","postItem","postAuthor","postComments","title","components_CommentsList_CommentsList","ListOfPosts","searchValue","searchPost","event","value","target","trim","_this","posts","filter","post","preparedValue","replace","toLowerCase","includes","htmlFor","placeholder","type","id","onChange","e","components_PostItem_PostItem","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","load","btnText","preparePosts","isLoaded","users","preparedPosts","find","userId","postId","components_ListOfPosts_ListOfPosts","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7793ffc0.chunk.js","sourcesContent":["export const postsLink = 'https://jsonplaceholder.typicode.com/posts';\nexport const usersLink = 'https://jsonplaceholder.typicode.com/users';\nexport const commentsLink = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const loadData = async(link) => {\n  let loadedData = await fetch(link);\n  loadedData = await loadedData.json();\n  return loadedData;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './User.css';\n\nclass User extends React.Component {\n  render() {\n    const { name, email } = this.props.user;\n    return (\n      <div className=\"user\">\n        {\n          name && (\n            <p className=\"user__name\">\n              {name}\n            </p>\n          )\n        }\n        {\n          email && (\n            <p className=\"user__email\">\n              {email}\n            </p>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport User from \"../User/User\";\nimport './CommentItem.css';\n\n\nconst CommentItem = ({ comment }) => {\n  return (\n    <div className=\"comments__item\">\n      <User user={{ name: comment.name }} />\n      <p className=\"comments__item__body\">{comment.body}</p>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default CommentItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CommentsList.css';\nimport CommentItem from '../CommentItem/CommentItem';\n\nclass CommentsList extends React.Component {\n  state = {\n    showComments: false,\n  };\n\n  showComments() {\n    this.setState(prevState => ({ showComments: !prevState.showComments }));\n  }\n\n  render() {\n    const { comments } = this.props;\n    return (\n      <div>\n        {\n          <button className=\"show-comments-btn\" onClick={() => { this.showComments(true); }}>\n            {\n              !this.state.showComments\n                ? 'Показать комментарии'\n                : 'Скрыть комментарии'\n            }\n          </button>\n        }\n        {\n          this.state.showComments && (\n            <div className=\"comments\">\n              {\n                comments.map(comment => <CommentItem comment={comment} />)\n              }\n            </div>)\n        }\n      </div>\n    );\n  }\n}\n\nCommentsList.propTypes = {\n  comments: PropTypes.object.isRequired,\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostItem.css';\nimport CommentList from '../CommentsList/CommentsList';\nimport User from \"../User/User\";\n\nconst PostItem = ({ postItem, postAuthor, postComments }) => (\n  <div className=\"post__container\">\n    <article className=\"post\">\n      <h2 className=\"post__title\">{postItem.title}</h2>\n      <p>{postItem.body}</p>\n\n      <User user={postAuthor} />\n\n    </article>\n    <CommentList comments={postComments} />\n  </div>\n);\n\nPostItem.propTypes = {\n  postItem: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n  postAuthor: PropTypes.object.isRequired,\n  postComments: PropTypes.object.isRequired,\n};\nexport default PostItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ListOfPosts.css';\nimport PostItem from '../PostItem/PostItem';\n\nclass ListOfPosts extends React.Component {\n  state = {\n    searchValue: '',\n  };\n\n  searchPost = (event) => {\n    const value = event.target.value.trim();\n    this.setState({ value });\n  };\n\n  filter(searchValue) {\n    // eslint-disable-next-line max-len\n    return this.props.posts.filter((post) => {\n      const preparedValue = searchValue.replace(/ /g, '').toLowerCase();\n      return post.postItem.title.replace(/ /g, '').toLowerCase().includes(preparedValue);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"posts-list\">\n\n        <label htmlFor=\"search-post\" className=\"search-post\">\n          <input\n            placeholder=\"Search post\"\n            type=\"search\"\n            id=\"search-post\"\n            className=\"search-post__input\"\n            onChange={(e) => { this.searchPost(e); }}\n          />\n        </label>\n\n        <div className=\"posts\">\n          {\n            this.filter(this.state.searchValue).map(post => <PostItem post={post} />)\n          }\n        </div>\n\n      </div>\n    );\n  }\n}\n\nListOfPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ListOfPosts;\n","import React from 'react';\nimport './App.css';\n\nimport {\n  usersLink, commentsLink, postsLink, loadData,\n} from '../../api/loadData';\n\nimport ListOfPosts from '../ListOfPosts/ListOfPosts';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      isLoaded: false,\n      btnText: 'Load',\n    };\n  }\n\n  load = async() => {\n    this.setState({ btnText: 'Loading' });\n    await this.preparePosts();\n    this.setState(prevState => ({ isLoaded: !prevState.isLoaded }));\n  };\n\n  async preparePosts() {\n    const users = await loadData(usersLink);\n    const posts = await loadData(postsLink);\n    const comments = await loadData(commentsLink);\n\n    const preparedPosts = posts.map(post => ({\n      postItem: post,\n      postAuthor: users.find(user => user.id === post.userId),\n      postComments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      posts: preparedPosts,\n    });\n  }\n\n  render() {\n    return (\n      <main className=\"main\">\n        {\n          !this.state.isLoaded && (\n            <button onClick={() => this.load()} className=\"load-btn\">\n              {this.state.btnText}\n            </button>\n          )\n        }\n        {\n          this.state.isLoaded && <ListOfPosts posts={this.state.posts} />\n        }\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}