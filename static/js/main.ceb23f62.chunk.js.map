{"version":3,"sources":["api/loadData.js","components/User/User.js","components/CommentItem/CommentItem.js","components/CommentsList/CommentsList.js","components/PostItem/PostItem.js","components/ListOfPosts/ListOfPosts.js","components/App/App.js","index.js"],"names":["loadPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","loadedData","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","loadUsers","_ref2","_callee2","_context2","loadComments","_ref3","_callee3","_context3","User","_this$props$user","props","user","name","email","react_default","createElement","className","React","Component","CommentItem","comment","components_User_User","body","CommentsList","state","commentsAreVisible","setState","prevState","_this2","comments","onClick","togleComments","map","components_CommentItem_CommentItem","key","id","PostItem","post","console","log","postItem","title","postAuthor","components_CommentsList_CommentsList","postComments","ListOfPosts","searchValue","searchPost","event","target","value","trim","_this","preparedValue","replace","toLowerCase","posts","filter","includes","filteredPosts","filterPosts","htmlFor","placeholder","type","onChange","components_PostItem_PostItem","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","load","users","preparedPosts","btnText","Promise","all","slicedToArray","find","userId","postId","isLoaded","components_ListOfPosts_ListOfPosts","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ceb23f62.chunk.js","sourcesContent":["export const loadPosts = async() => {\n  let loadedData = await fetch('https://jsonplaceholder.typicode.com/posts');\n  loadedData = await loadedData.json();\n  return loadedData;\n};\n\nexport const loadUsers = async() => {\n  let loadedData = await fetch('https://jsonplaceholder.typicode.com/users');\n  loadedData = await loadedData.json();\n  return loadedData;\n};\n\nexport const loadComments = async() => {\n  let loadedData = await fetch('https://jsonplaceholder.typicode.com/comments');\n  loadedData = await loadedData.json();\n  return loadedData;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './User.css';\n\nclass User extends React.Component {\n  render() {\n    const { name, email } = this.props.user;\n    return (\n      <div className=\"user\">\n        {\n          name && (<p className=\"user__name\">{name}</p>)\n        }\n        {\n          email && (<p className=\"user__email\">{email}</p>)\n        }\n      </div>\n    );\n  }\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport User from \"../User/User\";\nimport './CommentItem.css';\n\n\nconst CommentItem = ({ comment }) => {\n  return (\n    <div className=\"comments__item\">\n      <User user={{ name: comment.name }} />\n      <p className=\"comments__item__body\">{comment.body}</p>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default CommentItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CommentsList.css';\nimport CommentItem from '../CommentItem/CommentItem';\n\nclass CommentsList extends React.Component {\n  state = {\n    commentsAreVisible: false,\n  };\n\n  togleComments() {\n    this.setState(prevState => ({ commentsAreVisible: !prevState.commentsAreVisible }));\n  }\n\n  render() {\n    const { comments } = this.props;\n    const { commentsAreVisible } = this.state;\n    return (\n      <div>\n        {\n          <button\n            className=\"show-comments-btn\"\n            onClick={() => { this.togleComments(true); }}\n          >\n            {\n              commentsAreVisible\n                ? 'Скрыть комментарии'\n                : 'Показать комментарии'\n            }\n          </button>\n        }\n        {\n          commentsAreVisible && (\n            <div className=\"comments\">\n              {\n                comments.map(comment => (\n                  <CommentItem comment={comment} key={comment.id} />\n                ))\n              }\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nCommentsList.propTypes = {\n  comments: PropTypes.object.isRequired,\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostItem.css';\nimport CommentList from '../CommentsList/CommentsList';\nimport User from '../User/User';\n\nconst PostItem = ({ post }) => (\n  <div className=\"post__container\">\n    {console.log(post.postItem)}\n    <article className=\"post\">\n      <h2 className=\"post__title\">{post.postItem.title}</h2>\n      <p>{post.postItem.body}</p>\n\n      <User user={post.postAuthor} />\n\n    </article>\n    <CommentList comments={post.postComments} />\n  </div>\n);\n\nPostItem.propTypes = {\n  post: PropTypes.shape({\n    postItem: PropTypes.shape({\n      title: PropTypes.string,\n      body: PropTypes.string,\n    }),\n    postAuthor: PropTypes.object,\n    postComments: PropTypes.object,\n  }).isRequired,\n};\nexport default PostItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ListOfPosts.css';\nimport PostItem from '../PostItem/PostItem';\n\nclass ListOfPosts extends React.Component {\n  state = {\n    searchValue: '',\n  };\n\n  searchPost = (event) => {\n    const searchValue = event.target.value.trim();\n    this.setState({ searchValue });\n  };\n\n  filterPosts(searchValue) {\n    const preparedValue = searchValue.replace(/\\s+/g, ' ').toLowerCase();\n    return this.props.posts.filter((post) => {\n      return post.postItem.title\n        .toLowerCase()\n        .includes(preparedValue);\n    });\n  }\n\n  render() {\n    const filteredPosts = this.filterPosts(this.state.searchValue);\n    return (\n      <div className=\"posts-list\">\n\n        <label htmlFor=\"search-post\" className=\"search-post\">\n          <input\n            placeholder=\"Search post\"\n            type=\"search\"\n            id=\"search-post\"\n            className=\"search-post__input\"\n            onChange={this.searchPost}\n          />\n        </label>\n\n        <div className=\"posts\">\n          {\n            filteredPosts.map(post => (\n              <PostItem post={post} key={post.id} />\n            ))\n          }\n        </div>\n\n      </div>\n    );\n  }\n}\n\nListOfPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ListOfPosts;\n","import React from 'react';\nimport './App.css';\n\nimport {\n  loadUsers, loadComments, loadPosts,\n} from '../../api/loadData';\n\nimport ListOfPosts from '../ListOfPosts/ListOfPosts';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      isLoaded: false,\n      btnText: 'Load',\n    };\n  }\n\n  load = async() => {\n    this.setState({ btnText: 'Loading' });\n    const [users, posts, comments] = await Promise.all([\n      loadUsers(),\n      loadPosts(),\n      loadComments(),\n    ]);\n\n    const preparedPosts = posts.map(post => ({\n      postItem: post,\n      postAuthor: users.find(user => user.id === post.userId),\n      postComments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      posts: preparedPosts,\n    });\n\n    this.setState(prevState => ({\n      isLoaded: !prevState.isLoaded,\n      posts: preparedPosts,\n    }));\n  };\n\n  render() {\n    return (\n      <main className=\"main\">\n        {\n          !this.state.isLoaded\n            ? (\n              <button onClick={() => this.load()} className=\"load-btn\">\n                {this.state.btnText}\n              </button>\n            ) : (\n              <ListOfPosts posts={this.state.posts} />\n            )\n        }\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}