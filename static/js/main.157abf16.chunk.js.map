{"version":3,"sources":["api/loadData.js","components/User/User.js","components/CommentItem/CommentItem.js","components/CommentsList/CommentsList.js","components/PostItem/PostItem.js","components/ListOfPosts/ListOfPosts.js","components/App/App.js","index.js"],"names":["loadData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","link","loadedData","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","User","_this$props$user","props","user","name","email","needEmail","react_default","createElement","className","React","Component","CommentItem","comment","components_User_User","body","CommentsList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","showComments","setState","prevState","_this2","onClick","comments","map","components_CommentItem_CommentItem","PostItem","_this$props$post","post","postItem","postAuthor","postComments","title","components_CommentsList_CommentsList","ListOfPosts","value","searchPost","event","target","trim","posts","filter","preparedValue","replace","includes","htmlFor","placeholder","type","id","onChange","e","components_PostItem_PostItem","App","load","btnText","preparePosts","isLoaded","users","preparedPosts","find","userId","postId","components_ListOfPosts_ListOfPosts","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.157abf16.chunk.js","sourcesContent":["export const postsLink = 'https://jsonplaceholder.typicode.com/posts';\nexport const usersLink = 'https://jsonplaceholder.typicode.com/users';\nexport const commentsLink = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const loadData = async(link) => {\n  let loadedData = await fetch(link);\n  loadedData = await loadedData.json();\n  return loadedData;\n};\n","import React from 'react';\n\nimport './User.css';\n\nclass User extends React.Component {\n  render() {\n    const { name, email } = this.props.user;\n    const { needEmail } = this.props;\n    return (\n      <div className=\"user\">\n        {\n          name && (\n            <p className=\"user__name\">\n              {name}\n            </p>\n          )\n        }\n        {\n          email && (\n            <p className=\"user__email\">\n              {email}\n            </p>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from 'react';\n\nimport User from \"../User/User\";\nimport './CommentItem.css';\n\nconst CommentItem = ({ comment }) => {\n  return (\n    <div className=\"comments__item\">\n      <User user={{ name: comment.name }} />\n      <p className=\"comments__item__body\">{comment.body}</p>\n    </div>\n  );\n};\n\nexport default CommentItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CommentsList.css';\nimport CommentItem from '../CommentItem/CommentItem';\n\nclass CommentsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showComments: false,\n    };\n  }\n\n  showComments() {\n    this.setState(prevState => ({ showComments: !prevState.showComments }));\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          <button className=\"show-comments-btn\" onClick={() => { this.showComments(true); }}>\n            {\n              !this.state.showComments\n                ? 'Показать комментарии'\n                : 'Скрыть комментарии'\n            }\n          </button>\n        }\n        {\n          this.state.showComments && (\n            <div className=\"comments\">\n              {\n                this.props.comments.map(comment => <CommentItem comment={comment} />)\n              }\n            </div>)\n        }\n      </div>\n    );\n  }\n}\n\nCommentsList.propTypes = {\n  comments: PropTypes.object.isRequired,\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostItem.css';\nimport CommentList from '../CommentsList/CommentsList';\nimport User from \"../User/User\";\n\nclass PostItem extends React.Component {\n\n  render() {\n    const { postItem, postAuthor, postComments } = this.props.post;\n    return (\n      <div className=\"post__container\">\n        <article className=\"post\">\n          <h2 className=\"post__title\">{postItem.title}</h2>\n          <p>{postItem.body}</p>\n\n          <User user={postAuthor} />\n\n        </article>\n        <CommentList comments={postComments} />\n      </div>\n    );\n  }\n}\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n};\nexport default PostItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ListOfPosts.css';\nimport PostItem from '../PostItem/PostItem';\n\nclass ListOfPosts extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  searchPost = (event) => {\n    const value = event.target.value.trim();\n    this.setState({ value });\n  };\n\n  filter(value) {\n    // eslint-disable-next-line max-len\n    return this.props.posts.filter((post) => {\n      const preparedValue = value.replace(/ /g, '');\n      return post.postItem.title.replace(/ /g, '').includes(preparedValue);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"posts-list\">\n\n        <label htmlFor=\"search-post\" className=\"search-post\">\n          {/* eslint-disable-next-line max-len */}\n          <input placeholder=\"Search post\" type=\"search\" id=\"search-post\" className=\"search-post__input\" onChange={(e) => { this.searchPost(e); }} />\n        </label>\n\n        <div className=\"posts\">\n          {\n            this.filter(this.state.value).map(post => <PostItem post={post} />)\n          }\n        </div>\n\n      </div>\n    );\n  }\n}\n\nListOfPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ListOfPosts;\n","import React from 'react';\nimport './App.css';\n\nimport {\n  usersLink, commentsLink, postsLink, loadData,\n} from '../../api/loadData';\n\nimport ListOfPosts from '../ListOfPosts/ListOfPosts';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.preparePosts();\n\n    this.state = {\n      posts: [],\n      isLoaded: false,\n      btnText: 'Load',\n    };\n  }\n\n  load = async() => {\n    this.setState({ btnText: 'Loading' });\n    await this.preparePosts();\n    this.setState(prevState => ({ isLoaded: !prevState.isLoaded }));\n  };\n\n  async preparePosts() {\n    const users = await loadData(usersLink);\n    const posts = await loadData(postsLink);\n    const comments = await loadData(commentsLink);\n\n    const preparedPosts = posts.map(post => ({\n      postItem: post,\n      postAuthor: users.find(user => user.id === post.userId),\n      postComments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      posts: preparedPosts,\n    });\n  }\n\n  render() {\n    return (\n      <main className=\"main\">\n        {\n          !this.state.isLoaded && (\n            <button onClick={() => this.load()} className=\"load-btn\">{this.state.btnText}</button>\n          )\n        }\n        {\n          this.state.isLoaded && <ListOfPosts posts={this.state.posts} />\n        }\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}